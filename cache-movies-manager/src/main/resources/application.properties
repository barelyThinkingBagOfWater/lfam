application.name = cache-movies-manager
logging.level.root=INFO

#Importer. Comment source to skip importer.
#importer.csv.file=/tmp/tags.csv

#Docker
importer.rest.uri=https://movies-manager

#Manager
manager.retry.delay.ms=2000
manager.retry.attempts=4
manager.repository.timeout.ms=5000
manager.imports.logging.enabled=true

#Metrics
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

#Server
#server.error.includeStacktrace=ALWAYS
debug=false
server.port=80

#SSL
trust.store=classpath:keystore/services_keystore.p12
trust.store.password=password

#Redis
spring.redis.single.url=redis
spring.redis.cluster.url=
spring.redis.nodes.number=1

#Default values
spring.redis.ssl=false
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.max-wait=-1ms
spring.redis.lettuce.pool.min-idle=0
#spring.redis.timeout
#spring.redis.lettuce.pool.time-between-eviction-runs
spring.data.redis.repositories.enabled=false

###RMQ
spring.rabbitmq.host=rabbit
spring.rabbitmq.port=5672
spring.rabbitmq.username=rabbit
spring.rabbitmq.password=rabbit123

#Oauth2
keycloak.host=http://keycloak:8080
keycloak.secret=fake_secret
spring.security.oauth2.client.provider.keycloak.token-uri = ${keycloak.host}/auth/realms/services-realm/protocol/openid-connect/token
spring.security.oauth2.client.registration.keycloak.client-id = movies-manager
spring.security.oauth2.client.registration.keycloak.client-secret = ${keycloak.secret}
spring.security.oauth2.client.registration.keycloak.scopes = movies:import
#For the securityContext to allow the health checks
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.host}/auth/realms/services-realm
